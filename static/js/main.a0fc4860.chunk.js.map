{"version":3,"sources":["components/account/Login.js","components/account/Register.js","components/account/Logout.js","components/leftBar/CalendarEntry.js","components/leftBar/CalendarList.js","components/account/Welcome.js","components/leftBar/LeftBar.js","components/calendar/TopNav.js","components/calendar/month/Day.js","components/calendar/month/Week.js","components/calendar/month/MonthView.js","components/calendar/CalendarBody.js","components/calendar/Calendar.js","components/ScreenSmall.js","components/CalendarMain.js","components/calendars/CalendarCreate.js","components/calendars/CalendarEdit.js","components/calendars/CalendarUpdateMain.js","components/calendars/CalendarDelete.js","components/arrangements/EventCreate.js","components/arrangements/ArrangementCreate.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","loginRedirect","setLoginRedirect","loginError","setLoginError","toast","setToast","toastRegistered","setToastRegistered","justRegistered","useLocation","state","submit","e","a","preventDefault","fetch","process","method","headers","credentials","body","JSON","stringify","then","response","ok","error","Error","status","statusText","json","setUser","catch","toString","to","loginErrorText","Toast","onClose","show","delay","autohide","Header","src","className","alt","Body","justRegisteredText","undefined","ToastContainer","position","Form","onSubmit","Floating","controlId","Control","type","placeholder","onChange","target","value","required","Label","Button","variant","size","Register","name","setName","registerRedirect","setRegisterRedirect","registerError","setRegisterError","pathname","registerErrorText","Logout","logoutRedirect","setLogoutRedirect","user","CalendarEntry","mainCalendarText","main_calendar","calendar","id","title","color","onClick","visible","fetchCalendars","alert","setVisibleCalendar","CalendarList","userLoaded","calendarsLoaded","Spinner","animation","role","calendarsList","calendars","map","Welcome","LeftBar","length","TopNav","todayButton","currentDateClassName","moment","viewDate","format","ButtonGroup","setViewDate","viewButtons","view","setView","username","subtract","add","Day","eventsLoaded","dayDate","cn","events","forEach","event","filter","calendar_id","all_day","end","diff","start","isBetween","multipleDays","push","setShowEventModal","today","Week","week","day","parseInt","index","firstDay","firstDayDate","showEventModal","MonthView","weeksJS","style","zIndex","CalendarBody","setEvents","setEventsLoaded","useEffect","fetchData","Calendar","redirectToLogin","modalContent","classList","indexOf","Modal","onHide","closeButton","Title","ScreenSmall","width","height","CalendarMain","setCalendars","setCalendarsLoaded","isMobile","useMediaQuery","query","CalendarCreate","description","setDescription","setColor","createCalendarCreateRedirect","setCalendarCreateRedirect","Select","defaultValue","withRouter","calendarEditRedirect","setCalendarEditRedirect","history","useHistory","calendarInfo","match","params","calendarControl","mainName","calendarUpdateMainRedirect","setCalendarUpdateMainRedirect","calendarDeleteRedirect","setCalendarDeleteRedirect","deleteButton","Alert","EventCreate","disabled","ArrangementCreate","startDate","setStartDate","endDate","setEndDate","allDay","setAllDay","startTime","setStartTime","endTime","setEndTime","setCalendar","arrangementCreateRedirect","setArrangementCreateRedirect","selectAllDay","isBefore","App","setUserLoaded","fetchUser","path","exact","component","CalendarUpdateMain","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0fc4860.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { useLocation } from 'react-router';\nimport { Button, Form, Toast, ToastContainer } from 'react-bootstrap';\nimport { BoxArrowInRight } from 'react-bootstrap-icons';\n\n\nconst Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loginRedirect, setLoginRedirect] = useState(false);\n    const [loginError, setLoginError] = useState('');\n    const [toast, setToast] = useState(false);\n\n    const [toastRegistered, setToastRegistered] = useState(true);\n\n    let justRegistered = useLocation().state;\n\n    const submit = async (e) => {\n        e.preventDefault();\n        setLoginError('');\n        setToast(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setLoginRedirect(true);\n                setLoginError('');\n                props.setUser(response);\n                setToastRegistered(false);\n            })\n            .catch(error => {\n                setLoginError(error.toString());\n                setToast(true);\n                setToastRegistered(false);\n            });\n    }\n\n    if (loginRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    let loginErrorText = (\n        <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n            <Toast.Header>\n                <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                <strong className=\"me-auto\">Invalid Login</strong>\n            </Toast.Header>\n            <Toast.Body>{loginError}</Toast.Body>\n        </Toast>\n    );\n    if (loginError === 'Error: Error 401: Unauthorized' || loginError === 'Error: Error 401: ') {\n        loginErrorText = (\n            <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Invalid Login</strong>\n                </Toast.Header>\n                <Toast.Body>Email or password incorrect.</Toast.Body>\n            </Toast>\n        );\n    }\n\n    let justRegisteredText = (\n        <div></div>\n    );\n    if (justRegistered !== undefined && !loginError) {\n        if (justRegistered['justRegistered'] !== 'false') {\n            justRegisteredText = (\n                <Toast onClose={() => setToastRegistered(false)} show={toastRegistered} delay={5000} autohide>\n                    <Toast.Header>\n                        <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                        <strong className=\"me-auto\">Account Registered</strong>\n                    </Toast.Header>\n                    <Toast.Body>Now you can login with your email and password.</Toast.Body>\n                </Toast>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <ToastContainer position=\"bottom-end\" className=\"p-3\">\n                {loginError ? loginErrorText : ''}\n                {justRegisteredText}\n            </ToastContainer>\n\n            <Form onSubmit={submit}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Login to PLANSE</h1>\n\n                <p className=\"text-center\">\n                    <Link to=\"/register\">Register instead</Link>\n                </p>\n\n                <Form.Floating controlId=\"formEmail\">\n                    <Form.Control type=\"email\" className=\"top\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} required />\n                    <Form.Label>Email</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formPassword\">\n                    <Form.Control type=\"password\" className=\"bottom\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} required />\n                    <Form.Label>Password</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Log in <BoxArrowInRight /></Button>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Button, Form, Toast, ToastContainer } from 'react-bootstrap';\nimport { BoxArrowRight } from 'react-bootstrap-icons';\nimport { Redirect, Link } from 'react-router-dom';\n\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [registerRedirect, setRegisterRedirect] = useState(false);\n    const [registerError, setRegisterError] = useState('');\n    const [toast, setToast] = useState(false);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        setRegisterError('');\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/register', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name,\n                email,\n                password\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setRegisterRedirect(true);\n                setRegisterError('');\n                setToast(false);\n                // props.setUser(response);\n            })\n            .catch(error => {\n                setRegisterError(error.toString());\n                setToast(true);\n            });\n    }\n\n    if (registerRedirect) {\n        return (\n            <Redirect to={{ pathname: '/login', state: { justRegistered: 'true' } }}\n            />\n        );\n    }\n\n    let registerErrorText = (\n        <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Register Error</strong>\n                </Toast.Header>\n                <Toast.Body>{registerError}</Toast.Body>\n            </Toast>\n    );\n    if (registerError === 'Error: Error 409: Conflict' || registerError === 'Error: Error 409: ') {\n        registerErrorText = (\n            <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Register Error</strong>\n                </Toast.Header>\n                <Toast.Body>This email is already registered.</Toast.Body>\n            </Toast>\n        );\n    }\n\n    return (\n        <div>\n            <ToastContainer position=\"bottom-end\" className=\"p-3\">\n                {registerError ? registerErrorText : ''}\n            </ToastContainer>\n\n            <Form className=\"register\" onSubmit={submit}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Register on PLANSE</h1>\n\n                <p className=\"text-center\">\n                    <Link to=\"/login\">Login instead</Link>\n                </p>\n\n                <Form.Floating controlId=\"formName\">\n                    <Form.Control type=\"text\" className=\"top\" placeholder=\"Ed Baldwin\" onChange={e => setName(e.target.value)} required />\n                    <Form.Label>Name</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formEmail\">\n                    <Form.Control type=\"email\" className=\"middle\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} required />\n                    <Form.Label>Email address</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formPassword\">\n                    <Form.Control type=\"password\" className=\"bottom\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} required />\n                    <Form.Label>Password</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Register <BoxArrowRight /></Button>\n\n                <p className=\"mt-3 mb-3 text-muted text-center\">You will be redirected to the login page.<br />Email verification doesn't needed.<br />We'll never share your email with anyone else</p>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { BoxArrowRight } from 'react-bootstrap-icons';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Logout = (props) => {\n    const [logoutRedirect, setLogoutRedirect] = useState(false);\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        await fetch(process.env.REACT_APP_DOMAIN + '/api/logout', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({})\n        });\n\n        setLogoutRedirect(true);\n        props.setUser([]);\n    }\n\n    if (logoutRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Form onSubmit={submit}>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">{props.user.name}, do you really want to log out?</h1>\n\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Log out <BoxArrowRight /></Button>\n\n            <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n        </Form>\n    );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { CheckSquareFill, Gear, Square, Star } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\n\n\nexport const CalendarEntry = (props) => {\n    let setVisibleCalendar = (id) => {\n        const visible = props.calendar.visible === 1 ? 0 : 1;\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/update/' + id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                visible\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                props.fetchCalendars();\n            })\n            .catch(error => {\n                alert(error);\n                props.fetchCalendars();\n            });\n    }\n\n    let mainCalendarText = (\n        <span></span>\n    );\n\n    if (props.user.main_calendar === props.calendar.id) {\n        mainCalendarText = (\n            <span className=\"text-secondary\" title=\"This is your main calendar\">\n                <Star />\n            </span>\n        );\n    }\n\n    return (\n        <div className=\"d-flex calendar-entry\">\n            <p className=\"mt-0 mb-0 flex-fill\">\n                <span className={\"calendar-color-\" + props.calendar.color} title=\"Show or hide this calendar\">\n                    <Link to=\"#\" className=\"color-inherit\" onClick={() => setVisibleCalendar(props.calendar.id)}>{props.calendar.visible === 1 ? <CheckSquareFill /> : <Square />}</Link> {props.calendar.name}\n                </span>\n            </p>\n\n            <p className=\"mt-0 mb-0\">\n                <span className=\"pr-3\">{mainCalendarText} </span>\n                <span>\n                    <Link to={\"/calendar/edit/\" + props.calendar.id} className=\"text-decoration-none text-secondary\" title=\"Edit this calendar\">\n                        <Gear />\n                    </Link>\n                </span>\n            </p>\n        </div>\n    );\n};\n\nexport default CalendarEntry;\n\n\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport { CalendarEntry } from './CalendarEntry';\n\nexport const CalendarList = (props) => {\n\n    if (props.userLoaded === false) {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n    else {\n        if (props.calendarsLoaded !== true) {\n            return (\n                <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n            );\n        }\n        else {\n            let calendarsList = props.calendars.map((calendar) => {\n                return <CalendarEntry key={calendar.id} calendar={calendar} user={props.user} fetchCalendars={props.fetchCalendars} />\n            })\n\n            return (\n                <div>\n                    {calendarsList}\n                </div>\n            );\n        }\n    }\n};\n\nexport default CalendarList;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\n\n\nexport const Welcome = () => {\n    return (\n        <div>\n            <Form>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Welcome to PLANSE</h1>\n\n                <p className=\"text-center\">Online calendar application.</p>\n\n                <Link to=\"/login\" className=\"w-100 btn btn-lg btn-primary\">Log in</Link>\n                <Link to=\"/register\" className=\"w-100 btn btn-lg btn-outline-primary mt-3\">Register</Link>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React, { useState } from 'react';\n\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nimport { CalendarList } from '../leftBar/CalendarList';\nimport { Welcome } from '../account/Welcome';\nimport { Calendar3, CalendarPlus, PlusCircleDotted } from 'react-bootstrap-icons';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const LeftBar = (props) => {\n    const [redirectToLogin] = useState(false);\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div className=\"left-bar\">\n                    <h5 className=\"calendar-entry\"><Calendar3 /> PLANSE Calendars</h5>\n\n                    <div className=\"d-flex calendar-entry\">\n                        <h6 className=\"text-muted flex-fill\">Your calendars</h6>\n\n                        <h6><Link to=\"calendar/create\" className=\"text-secondary\" title=\"Create calendar\"><CalendarPlus /></Link></h6>\n                    </div>\n                    \n\n                    <CalendarList user={props.user} userLoaded={props.userLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} fetchCalendars={props.fetchCalendars} />\n\n                    <p className=\"mt-4\">\n                        <Link to=\"/event/create\" className=\"btn btn-primary w-100\"><PlusCircleDotted /> Create event</Link>\n                    </p>\n                </div>\n            );\n        }\n    }\n};\n\nexport default LeftBar;\n","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport moment from 'moment';\nimport { Button, ButtonGroup, Spinner } from 'react-bootstrap';\nimport { ChevronCompactRight, ChevronLeft, ChevronRight } from 'react-bootstrap-icons';\n\n\nexport const TopNav = (props) => {\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let todayButton = (<div></div>);\n        let currentDateClassName = \"currentDate d-flex\";\n        if (moment(props.viewDate).format('MM YYYY') !== moment().format('MM YYYY')) {\n            todayButton = (\n                <ButtonGroup size=\"sm\" aria-label=\"View\" className=\"goToToday\">\n                    <Button variant=\"outline-primary\" onClick={() => props.setViewDate(moment())}>Go to Today</Button>\n                </ButtonGroup>\n            );\n\n            currentDateClassName += \" notToday\";\n        }\n\n        const viewButtons = (\n            <div className=\"selectView d-flex\">\n                <ButtonGroup size=\"sm\" aria-label=\"View\" className=\"viewButtons\">\n                    <Button variant={props.view === 'week' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"week\")}>Week</Button>\n                    <Button variant={props.view === 'month' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"month\")}>Month</Button>\n                    <Button variant={props.view === 'year' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"year\")}>Year</Button>\n                </ButtonGroup>\n\n                {todayButton}\n            </div>\n        );\n\n        const username = (\n            <div className=\"account\">\n                <p className=\"text-end\">\n                    <Link to=\"/logout\" className=\"text-decoration-none\">{props.user.name} <ChevronCompactRight /></Link>\n                </p>\n            </div>\n        );\n\n        if (props.view === \"week\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n        else if (props.view === \"month\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        <div className=\"flex-fill\">\n                            <h3 className=\"text-center\">\n                                <span className=\"chevron\" onClick={() => props.setViewDate(moment(props.viewDate).subtract(1, \"months\"))}><ChevronLeft /></span>\n\n                                <span>{moment(props.viewDate).format('MMMM')} </span>\n                                <span className=\"fw-lighter\">{moment(props.viewDate).format('YYYY')}</span>\n\n                                <span className=\"chevron\" onClick={() => props.setViewDate(moment(props.viewDate).add(1, \"months\"))}><ChevronRight /></span>\n                            </h3>\n                        </div>\n\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n        else if (props.view === \"year\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n    }\n};\n\nexport default TopNav;\n","import React from 'react';\n\nimport moment from 'moment';\nimport { ChevronCompactRight } from 'react-bootstrap-icons';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const Day = (props) => {\n    if (props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let dayDate = props.dayDate;\n\n        let cn = \"dayNum mt-0 mb-0\"\n        if (dayDate.format(\"MM\") !== props.viewDate.format(\"MM\")) {\n            cn = \"dayNum text-secondary\"\n        }\n\n        let events = []\n\n        props.events.forEach((event) => {\n            let visible = props.calendars.filter((calendar) => calendar.id === event.calendar_id)[0].visible;\n            if (visible === 0) {\n                return;\n            }\n\n            let color = event.color;\n            if (color === null) {\n                props.calendars.forEach((calendar) => {\n                    if (calendar.id === event.calendar_id) {\n                        color = calendar.color;\n                    }\n                });\n            }\n            if (event.all_day === 1 || moment(event.end).diff(moment(event.start), \"days\") > 0) {\n                color = \"calendar-color-\" + color + \" calendar-background-color-\" + color;\n            }\n            else {\n                color = \"calendar-color-\" + color;\n            }\n\n            if (dayDate.isBetween(moment(event.start), moment(event.end), 'days', '[]') === true) {\n                if (event.all_day === 1 || moment(event.end).diff(dayDate, \"days\") > 0) {\n                    let multipleDays = (\n                        <span title=\"This event does not end today\" className={\"arrangement-\" + event.id}><ChevronCompactRight className={\"arrangement-\" + event.id} /></span>\n                    );\n                    if (moment(event.end).diff(dayDate, \"days\") === 0) {\n                        multipleDays = (\n                            <span className={\"arrangement-\" + event.id}></span>\n                        );\n                    }\n\n                    events.push(\n                        <div className={\"arrangement arrangement-allDay \" + color + \" arrangement-\" + event.id} key={event.id} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <p className={\"name arrangement-\" + event.id}>{event.name}</p>\n                            <p className={\"info arrangement-\" + event.id}>{multipleDays}</p>\n                        </div>\n                    );\n                }\n                else {\n                    events.push(\n                        <div className={\"arrangement arrangement-timeSpecific \" + color + \" arrangement-\" + event.id} key={event.id} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <p className={\"name arrangement-\" + event.id}>{event.name}</p>\n                            <p className={\"info arrangement-\" + event.id}>{moment(event.end).format(\"H:mm\")}</p>\n                        </div>\n                    );\n                }\n            }\n        });\n\n        return (\n            <div>\n                <p className={cn + \" \" + props.today + \" day-\" + dayDate.format(\"DD-MM-YYYY\")}>{dayDate.format('D')} {props.today === \"\" ? \"\" : \" — Today\"}</p>\n\n                <div>\n                    {events}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Day;\n","import React from 'react';\n\nimport moment from 'moment';\nimport { Spinner } from 'react-bootstrap';\nimport { Day } from '../month/Day';\n\n\nexport const Week = (props) => {\n    if (props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        return (\n            <>\n                {props.week.map((day) => {\n                    const week = parseInt(props.index, 10);\n                    const firstDay = props.firstDay;\n                    const firstDayDate = parseInt(props.firstDayDate, 10);\n\n                    let dayDate = moment(firstDay).add(day - firstDayDate + week * 7, \"days\");\n\n                    let today = \"\";\n                    if (dayDate.format(\"DD MM YYYY\") === moment().format(\"DD MM YYYY\")) {\n                        today = \"today\"\n                    }\n\n                    return (\n                        <div className={\"day day-\" + dayDate.format(\"DD-MM-YYYY\") + \" \" + today} key={day} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <Day day={day} key={day} dayDate={dayDate} today={today} viewDate={props.viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} eventsLoaded={props.eventsLoaded} events={props.events} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n                        </div>\n                    )\n                })}\n            </>\n        );\n    }\n};\n\nexport default Week;\n","import React from 'react';\n\nimport moment from 'moment';\n\nimport { Week } from '../month/Week';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const MonthView = (props) => {\n    if (props.userLoaded === false || props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const firstDay = moment(\"01 \" + moment(props.viewDate).format('MM') + moment(props.viewDate).format('YYYY'), \"DD MM YYYY\");\n        let firstDayDate = moment(firstDay).format('d') - 1;\n\n        if (firstDayDate === -1) {\n            firstDayDate = 6;\n        }\n\n        let weeks = [\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6']\n        ];\n\n        let weeksJS = weeks.map((week, index) => {\n            return (\n                <div className=\"week d-flex\" key={index} style={{zIndex: index}}>\n                    <Week className=\"week d-flex\" week={week} index={index} key={index} firstDay={firstDay} firstDayDate={firstDayDate} viewDate={props.viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} eventsLoaded={props.eventsLoaded} events={props.events} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month\">\n                <div className=\"daysOfWeek d-flex\">\n                    <div className=\"day\">\n                        <p>Mon</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Tue</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Wed</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Thu</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Fri</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Sat</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Sun</p>\n                    </div>\n                </div>\n\n                {weeksJS}\n            </div>\n        );\n    }\n};\n\nexport default MonthView;\n","import React, { useEffect, useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport { MonthView } from '../calendar/month/MonthView';\n\n\nexport const CalendarBody = (props) => {\n    const [events, setEvents] = useState([]);\n    const [eventsLoaded, setEventsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        setEventsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/user/arrangements', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setEvents(response);\n                setEventsLoaded(true);\n            })\n            .catch(error => {\n                // alert(error);\n            });\n    }\n\n    if (props.userLoaded === false || props.calendarsLoaded !== true) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        if (props.view === 'week') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n        else if (props.view === 'month') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n        else if (props.view === 'year') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n    }\n};\n\nexport default CalendarBody;\n","import React, { useState } from 'react';\n\nimport { Redirect } from \"react-router-dom\";\n\nimport moment from 'moment';\n\nimport { TopNav } from '../calendar/TopNav';\nimport { CalendarBody } from '../calendar/CalendarBody';\nimport { Welcome } from '../account/Welcome';\nimport { Modal, Spinner } from 'react-bootstrap';\n\n\nexport const Calendar = (props) => {\n    const [redirectToLogin] = useState(false);\n    const [view, setView] = useState('month');\n    const [viewDate, setViewDate] = useState(moment());\n    const [showEventModal, setShowEventModal] = useState(false);\n\n    let modalContent = (\n        <div></div>\n    );\n\n    if (showEventModal.target) {\n        let event = showEventModal.target.classList.value;\n        if (event.indexOf('day-') > 0) {\n            // let day = event.split('day-')[1].split(' ')[0];\n\n            modalContent = (\n                <Modal show={true} onHide={() => setShowEventModal(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create event</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body></Modal.Body>\n                </Modal>\n            );\n        }\n        else if (event.indexOf('arrangement-') > 0) {\n            // let arrangement = event.split('arrangement-')[1].split(' ')[0];\n        }\n    }\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div className=\"calendar\">\n                    {modalContent}\n\n                    <TopNav user={props.user} userLoaded={props.userLoaded} view={view} setView={setView} viewDate={viewDate} setViewDate={setViewDate} />\n\n                    <CalendarBody user={props.user} userLoaded={props.userLoaded} view={view} viewDate={viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={showEventModal} setShowEventModal={setShowEventModal} />\n                </div>\n            );\n        }\n    }\n};\n\nexport default Calendar;\n","import React from 'react';\n\n\nexport const ScreenSmall = () => {\n    return (\n        <div className=\"px-4 py-5 my-5 text-center\">\n            <img className=\"d-block mx-auto mb-4\" src=\"img/desktop-computer.png\" alt=\"Desktop Computer\" width=\"72\" height=\"72\" />\n            <h1 className=\"display-6 fw-bold\">The window or screen is too small</h1>\n            <p className=\"lead mb-4\">Please resize the window to make it wider. If the window is full screen, use another large screen device such as a desktop computer.</p>\n        </div>\n    );\n};\n\nexport default ScreenSmall;\n","import React, { useEffect, useState } from 'react';\n\nimport { useMediaQuery } from 'react-responsive';\nimport { Redirect } from \"react-router-dom\";\n\nimport { LeftBar } from './leftBar/LeftBar';\nimport { Calendar } from './calendar/Calendar';\nimport { Welcome } from './account/Welcome';\nimport { ScreenSmall } from './ScreenSmall';\n\nimport { Spinner } from 'react-bootstrap';\n\n\nconst CalendarMain = (props) => {\n    const [redirectToLogin] = useState(false);\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    const isMobile = useMediaQuery({ query: `(max-width: 1100px)` });\n\n    useEffect(() => {\n        fetchCalendars();\n    }, []);\n\n    const fetchCalendars = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                // alert(error);\n            });\n    }\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (isMobile === true && process.env.REACT_APP_DOMAIN !== \"http://localhost:8000\") {\n        return (\n            <ScreenSmall />\n        );\n    }\n    else if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n\n                <p className=\"text-muted\">First loading may take a while...</p>\n            </div>\n        );\n    }\n    else {\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div>\n                    <LeftBar user={props.user} setUser={props.setUser} calendars={calendars} calendarsLoaded={calendarsLoaded} fetchCalendars={fetchCalendars} />\n\n                    <Calendar user={props.user} setUser={props.setUser} calendars={calendars} calendarsLoaded={calendarsLoaded} />\n                </div>\n            );\n        }\n    }\n};\n\nexport default CalendarMain;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { CalendarPlus } from 'react-bootstrap-icons';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarCreate = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState(0);\n\n    const [createCalendarCreateRedirect, setCalendarCreateRedirect] = useState(false);\n\n    const createCalendar = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/create', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarCreateRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (createCalendarCreateRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Form onSubmit={createCalendar}>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">Create calendar</h1>\n\n            <Form.Floating controlId=\"formName\" className=\"mt-3\">\n                <Form.Control type=\"text\" className=\"top\" placeholder=\"Home\" onChange={e => setName(e.target.value)} required />\n                <Form.Label>Name *</Form.Label>\n            </Form.Floating>\n\n            <Form.Floating controlId=\"formDescription\">\n                <Form.Control type=\"text\" className=\"middle\" placeholder=\"Calendar for home events\" onChange={e => setDescription(e.target.value)} />\n                <Form.Label>Description</Form.Label>\n            </Form.Floating>\n\n            <Form.Floating controlId=\"formColor\">\n                <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue=\"0\" >\n                    <option value=\"0\">&#x1F33A; Red</option>\n                    <option value=\"1\">&#x1F3C0; Orange</option>\n                    <option value=\"2\">&#x2600;&#xFE0F; Yellow</option>\n                    <option value=\"3\">&#x1F966; Green</option>\n                    <option value=\"4\">&#x1F40B; Blue</option>\n                    <option value=\"5\">&#x1F47E; Purple</option>\n                </Form.Select>\n                <Form.Label>Color *</Form.Label>\n            </Form.Floating>\n\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100 mt-3\">Create calendar <CalendarPlus /></Button>\n        </Form>\n    );\n};\n\nexport default CalendarCreate;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Spinner } from 'react-bootstrap';\nimport { Save } from 'react-bootstrap-icons';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CalendarEdit = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState();\n\n    const [calendarEditRedirect, setCalendarEditRedirect] = useState(false);\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarEdit = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/update/' + props.match.params.id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarEditRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarEditRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === parseInt(props.match.params.id, 10))[0];\n\n        let calendarControl = (\n            <div className=\"mt-3\">\n                <Link to={{ pathname: \"/calendar/updateMain/\" + props.match.params.id, state: { mainName: calendarInfo.name } }} className=\"w-100 btn btn-lg btn-warning\">Make the main calendar</Link>\n\n                <Button variant=\"danger\" size=\"lg\" className=\"w-100 mt-3\" onClick={() => history.push(\"/calendar/delete/\" + props.match.params.id)}>Delete calendar</Button>\n            </div>\n        );\n        if (calendarInfo.id === props.user.main_calendar) {\n            calendarControl = (\n                <div className=\"mt-3\">\n                    <p className=\"text-center\">You can't delete your main calendar</p>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <Form onSubmit={calendarEdit}>\n                    <p className=\"text-center\">\n                        <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                    </p>\n\n                    <h1 className=\"h3 mb-3 fw-normal text-center\">Edit <code>{calendarInfo.name}</code> calendar</h1>\n\n                    <Form.Floating controlId=\"formName\">\n                        <Form.Control type=\"text\" className=\"top\" placeholder=\"Home\" onChange={e => setName(e.target.value)} defaultValue={calendarInfo.name} required />\n                        <Form.Label>Name *</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formDescription\">\n                        <Form.Control type=\"text\" className=\"middle\" placeholder=\"Calendar for home events\" defaultValue={calendarInfo.description} onChange={e => setDescription(e.target.value)} />\n                        <Form.Label>Description</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formColor\">\n                        <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue={calendarInfo.color} >\n                            <option value=\"0\">&#x1F33A; Red</option>\n                            <option value=\"1\">&#x1F3C0; Orange</option>\n                            <option value=\"2\">&#x2600;&#xFE0F; Yellow</option>\n                            <option value=\"3\">&#x1F966; Green</option>\n                            <option value=\"4\">&#x1F40B; Blue</option>\n                            <option value=\"5\">&#x1F47E; Purple</option>\n                        </Form.Select>\n                        <Form.Label>Color *</Form.Label>\n                    </Form.Floating>\n\n                    <Button variant=\"primary\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Save changes <Save /></Button>\n                    \n                    <hr className=\"mt-3\" />\n                    {calendarControl}\n                </Form>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(CalendarEdit);\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Spinner } from 'react-bootstrap';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarEdit = (props) => {\n    const [calendarUpdateMainRedirect, setCalendarUpdateMainRedirect] = useState(false);\n    const [id] = useState(parseInt(props.match.params.id, 10))\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarUpdateMain = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/updateMain/' + id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarUpdateMainRedirect(true);\n                props.setUser(response);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarUpdateMainRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === id)[0];\n\n        return (\n            <Form onSubmit={calendarUpdateMain}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Update main calendar</h1>\n\n                <p className=\"text-center\">You are going to change your main calendar to the <code>{calendarInfo.name}</code> calendar.</p>\n\n                <Button variant=\"primary\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Update main calendar</Button>\n            </Form>\n        );\n    }\n};\n\nexport default withRouter(CalendarEdit);\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Form, Spinner } from 'react-bootstrap';\nimport { CalendarX } from 'react-bootstrap-icons';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarDelete = (props) => {\n    const [calendarDeleteRedirect, setCalendarDeleteRedirect] = useState(false);\n    const [id] = useState(parseInt(props.match.params.id, 10))\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarDelete = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/delete/' + id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarDeleteRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarDeleteRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n                setCalendarsLoaded(false);\n            });\n    }\n\n    if (calendarsLoaded !== true) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === id)[0];\n\n        let deleteButton = (\n            <div>\n                <Alert key={calendarInfo.id} variant=\"danger\" className=\"text-center mt-3\">This action is irreversible</Alert>\n                <Button variant=\"danger\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Delete calendar <CalendarX /></Button>\n            </div>\n        );\n\n        if (props.user.main_calendar === calendarInfo.id) {\n            deleteButton = (\n                <Alert key={calendarInfo.id} variant=\"warning\" className=\"text-center\">You can't delete your main calendar</Alert>\n            );\n        }\n\n        return (\n            <Form onSubmit={calendarDelete}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Delete <code>{calendarInfo.name}</code> calendar</h1>\n\n                <p className=\"text-center\">You are going to delete this calendar.<br />All events in this calendar, as well as access settings will be deleted</p>\n\n                {deleteButton}\n            </Form>\n        );\n    }\n};\n\nexport default withRouter(CalendarDelete);\n","import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Bell, CalendarEvent, Sticky } from 'react-bootstrap-icons';\n\nimport { Link } from 'react-router-dom';\n\n\nconst EventCreate = (props) => {\n    return (\n        <Form>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">Create event</h1>\n\n            <Link to=\"/arrangement/create\" className=\"w-100 btn btn-lg btn-primary mt-3\"><CalendarEvent /> Arrangement</Link>\n            <Button variant=\"outline-primary\" size=\"lg\" className=\"w-100 mt-3\" disabled><Bell /> Reminder</Button>\n            <Button variant=\"outline-primary\" size=\"lg\" className=\"w-100 mt-3\" disabled><Sticky /> Task</Button>\n        </Form>\n    );\n};\n\nexport default EventCreate;\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Form, Spinner } from 'react-bootstrap';\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst ArrangementCreate = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const [startDate, setStartDate] = useState(moment().add(1, \"hours\").format(\"YYYY-MM-DD\"));\n    const [endDate, setEndDate] = useState(moment().add(2, \"hours\").format(\"YYYY-MM-DD\"));\n    const [allDay, setAllDay] = useState(true);\n    const [startTime, setStartTime] = useState(moment().add(1, \"hours\").format(\"HH\") + \":00\");\n    const [endTime, setEndTime] = useState(moment().add(2, \"hours\").format(\"HH\") + \":00\");\n\n    const [calendar, setCalendar] = useState(props.user.main_calendar);\n    const [color, setColor] = useState('');\n\n    const [arrangementCreateRedirect, setArrangementCreateRedirect] = useState(false);\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const arrangementCreate = (e) => {\n        e.preventDefault();\n\n        const all_day = allDay;\n        const calendar_id = calendar;\n\n        let start = startDate + \" \" + startTime + \":00\";\n        let end = endDate + \" \" + endTime + \":00\";\n\n        if (all_day === true) {\n            start = startDate + \" 00:00:00\";\n            end = endDate + \" 00:00:00\";\n\n            if (moment(endDate).isBefore(moment(startDate))) {\n                alert(\"Start date should be before end date.\");\n                return;\n            }\n        }\n        else {\n            if (moment(endDate + \" \" + endTime).isBefore(moment(startDate + \" \" + startTime))) {\n                alert(\"Start date should be before end date.\");\n                return;\n            }\n        }\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/arrangement/create', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                start,\n                end,\n                all_day,\n                calendar_id,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setArrangementCreateRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (arrangementCreateRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let calendarsList = calendars.map((calendar) => {\n            return (\n                <option value={calendar.id} key={calendar.id}>{calendar.name} {calendar.id === props.user.main_calendar ? '(Main)' : ''}</option>\n            );\n        })\n\n        let selectAllDay = (\n            <Form.Floating controlId=\"formAllDay\" className=\"mt-3\">\n                <ButtonGroup aria-label=\"All Day\" className=\"d-flex\">\n                    <Button variant=\"primary\" className=\"w-100 active\" onClick={() => setAllDay(true)}>All day</Button>\n                    <Button variant=\"primary\" className=\"w-100\" onClick={() => setAllDay(false)}>Selected time</Button>\n                </ButtonGroup>\n            </Form.Floating>\n        );\n\n        if (allDay === false) {\n            selectAllDay = (\n                <div>\n                    <Form.Floating controlId=\"formAllDay\" className=\"mt-3\">\n                        <ButtonGroup aria-label=\"All Day\" className=\"d-flex\">\n                            <Button variant=\"primary\" className=\"w-100\" onClick={() => setAllDay(true)}>All day</Button>\n                            <Button variant=\"primary\" className=\"w-100 active\" onClick={() => setAllDay(false)}>Selected time</Button>\n                        </ButtonGroup>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formStartTime\" className=\"mt-3\">\n                        <Form.Control type=\"time\" className=\"top\" placeholder=\"Start Time *\" onChange={e => setStartTime(e.target.value)} defaultValue={startTime} required />\n                        <Form.Label>Start Time *</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formEndTime\">\n                        <Form.Control type=\"time\" className=\"bottom\" placeholder=\"End Time *\" onChange={e => setEndTime(e.target.value)} defaultValue={endTime} required />\n                        <Form.Label>End Time *</Form.Label>\n                    </Form.Floating>\n                </div>\n            );\n        }\n\n        return (\n            <Form onSubmit={arrangementCreate}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Create arrangement</h1>\n\n                <Form.Floating controlId=\"formName\">\n                    <Form.Control type=\"text\" className=\"top\" placeholder=\"Name\" onChange={e => setName(e.target.value)} required />\n                    <Form.Label>Name *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formDescription\">\n                    <Form.Control type=\"text\" className=\"bottom\" placeholder=\"Description\" onChange={e => setDescription(e.target.value)} />\n                    <Form.Label>Description</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formStartDate\" className=\"mt-3\">\n                    <Form.Control type=\"date\" className=\"top\" placeholder=\"Start Date *\" onChange={e => setStartDate(e.target.value)} defaultValue={startDate} required />\n                    <Form.Label>Start Date *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formEndDate\">\n                    <Form.Control type=\"date\" className=\"bottom\" placeholder=\"End Date *\" onChange={e => setEndDate(e.target.value)} defaultValue={endDate} required />\n                    <Form.Label>End Date *</Form.Label>\n                </Form.Floating>\n\n                {selectAllDay}\n\n                <Form.Floating controlId=\"formCalendar\" className=\"mt-3\">\n                    <Form.Select className=\"top\" aria-label=\"Calendar *\" onChange={e => setCalendar(e.target.value)} defaultValue={props.user.main_calendar} >\n                        {calendarsList}\n                    </Form.Select>\n                    <Form.Label>Calendar *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formColor\">\n                    <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue=\"\" >\n                        <option value=\"\">Color of calendar</option>\n                        <option value=\"0\">&#x1F33A; Red</option>\n                        <option value=\"1\">&#x1F3C0; Orange</option>\n                        <option value=\"2\">&#x2600;&#xFE0F; Yellow</option>\n                        <option value=\"3\">&#x1F966; Green</option>\n                        <option value=\"4\">&#x1F40B; Blue</option>\n                        <option value=\"5\">&#x1F47E; Purple</option>\n                    </Form.Select>\n                    <Form.Label>Color *</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100 mt-3\"><PlusCircleDotted /> Create arrangement</Button>\n            </Form>\n        );\n    }\n};\n\nexport default ArrangementCreate;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Login from './components/account/Login';\nimport Register from './components/account/Register';\nimport Logout from './components/account/Logout';\n\nimport CalendarMain from './components/CalendarMain';\nimport CalendarCreate from './components/calendars/CalendarCreate';\nimport CalendarEdit from './components/calendars/CalendarEdit';\nimport CalendarUpdateMain from './components/calendars/CalendarUpdateMain';\nimport CalendarDelete from './components/calendars/CalendarDelete';\n\nimport EventCreate from './components/arrangements/EventCreate';\nimport ArrangementCreate from './components/arrangements/ArrangementCreate';\n\n\nfunction App() {\n    const [user, setUser] = useState([]);\n    const [userLoaded, setUserLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    const fetchUser = () => {\n        setUserLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/user', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setUser(response);\n                setUserLoaded(true);\n            })\n            .catch(error => {\n                setUserLoaded(true);\n            });\n    }\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Route path=\"/\" exact component={() => <CalendarMain user={user} userLoaded={userLoaded} />} />\n                <Route path=\"/login\" component={() => <Login setUser={setUser} />} />\n                <Route path=\"/register\" component={() => <Register setUser={setUser} />} />\n                <Route path=\"/logout\" component={() => <Logout user={user} setUser={setUser} />} />\n\n                <Route path=\"/calendar/create\" component={() => <CalendarCreate user={user} />} />\n                <Route path=\"/calendar/edit/:id\" component={() => <CalendarEdit user={user} />} />\n                <Route path=\"/calendar/updateMain/:id\" component={() => <CalendarUpdateMain user={user} setUser={setUser} />} />\n                <Route path=\"/calendar/delete/:id\" component={() => <CalendarDelete user={user} />} />\n\n                <Route path=\"/event/create\" component={() => <EventCreate user={user} />} />\n                <Route path=\"/arrangement/create\" component={() => <ArrangementCreate user={user} />} />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}