{"version":3,"sources":["components/account/Login.js","components/account/Register.js","components/account/Logout.js","components/leftBar/CalendarEntry.js","components/leftBar/CalendarList.js","components/account/Welcome.js","components/leftBar/LeftBar.js","components/calendar/TopNav.js","components/calendar/month/Day.js","components/calendar/month/Week.js","components/calendar/month/MonthView.js","components/calendar/CalendarBody.js","components/calendar/Calendar.js","components/CalendarMain.js","components/calendars/CalendarCreate.js","components/calendars/CalendarEdit.js","components/calendars/CalendarUpdateMain.js","components/calendars/CalendarDelete.js","components/arrangements/EventCreate.js","components/arrangements/ArrangementCreate.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","loginRedirect","setLoginRedirect","loginError","setLoginError","toast","setToast","toastRegistered","setToastRegistered","justRegistered","useLocation","state","submit","e","a","preventDefault","fetch","process","REACT_APP_DOMAIN","method","headers","credentials","body","JSON","stringify","then","response","ok","error","Error","status","statusText","json","setUser","catch","toString","to","loginErrorText","Toast","onClose","show","delay","autohide","Header","src","className","alt","Body","justRegisteredText","undefined","ToastContainer","position","Form","onSubmit","Floating","controlId","Control","type","placeholder","onChange","target","value","required","Label","Button","variant","size","Register","name","setName","registerRedirect","setRegisterRedirect","registerError","setRegisterError","pathname","registerErrorText","Logout","logoutRedirect","setLogoutRedirect","user","CalendarEntry","mainCalendarText","main_calendar","calendar","id","title","color","CalendarList","userLoaded","calendarsLoaded","Spinner","animation","role","calendarsList","calendars","map","Welcome","LeftBar","length","TopNav","todayButton","currentDateClassName","moment","viewDate","format","ButtonGroup","onClick","setViewDate","viewButtons","view","setView","username","subtract","add","Day","eventsLoaded","dayDate","cn","events","forEach","event","calendar_id","all_day","end","diff","start","isBetween","multipleDays","push","setShowEventModal","today","Week","week","day","parseInt","index","firstDay","firstDayDate","showEventModal","MonthView","weeksJS","style","zIndex","CalendarBody","setEvents","setEventsLoaded","useEffect","fetchData","Calendar","redirectToLogin","modalContent","classList","indexOf","split","console","log","Modal","onHide","closeButton","Title","arrangement","CalendarMain","setCalendars","setCalendarsLoaded","CalendarCreate","description","setDescription","setColor","createCalendarCreateRedirect","setCalendarCreateRedirect","alert","Select","defaultValue","withRouter","calendarEditRedirect","setCalendarEditRedirect","history","useHistory","calendarInfo","filter","match","params","calendarControl","mainName","calendarUpdateMainRedirect","setCalendarUpdateMainRedirect","calendarDeleteRedirect","setCalendarDeleteRedirect","deleteButton","Alert","EventCreate","disabled","ArrangementCreate","startDate","setStartDate","endDate","setEndDate","allDay","setAllDay","startTime","setStartTime","endTime","setEndTime","setCalendar","arrangementCreateRedirect","setArrangementCreateRedirect","selectAllDay","isBefore","App","setUserLoaded","fetchUser","path","exact","component","CalendarUpdateMain","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac139b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport { useLocation } from 'react-router';\nimport { Button, Form, Toast, ToastContainer } from 'react-bootstrap';\nimport { BoxArrowInRight } from 'react-bootstrap-icons';\n\n\nconst Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loginRedirect, setLoginRedirect] = useState(false);\n    const [loginError, setLoginError] = useState('');\n    const [toast, setToast] = useState(false);\n\n    const [toastRegistered, setToastRegistered] = useState(true);\n\n    let justRegistered = useLocation().state;\n\n    const submit = async (e) => {\n        e.preventDefault();\n        setLoginError('');\n        setToast(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setLoginRedirect(true);\n                setLoginError('');\n                props.setUser(response);\n                setToastRegistered(false);\n            })\n            .catch(error => {\n                setLoginError(error.toString());\n                setToast(true);\n                setToastRegistered(false);\n            });\n    }\n\n    if (loginRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    let loginErrorText = (\n        <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n            <Toast.Header>\n                <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                <strong className=\"me-auto\">Invalid Login</strong>\n            </Toast.Header>\n            <Toast.Body>{loginError}</Toast.Body>\n        </Toast>\n    );\n    if (loginError === 'Error: Error 401: Unauthorized' || loginError === 'Error: Error 401: ') {\n        loginErrorText = (\n            <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Invalid Login</strong>\n                </Toast.Header>\n                <Toast.Body>Email or password incorrect.</Toast.Body>\n            </Toast>\n        );\n    }\n\n    let justRegisteredText = (\n        <div></div>\n    );\n    if (justRegistered !== undefined && !loginError) {\n        if (justRegistered['justRegistered'] !== 'false') {\n            justRegisteredText = (\n                <Toast onClose={() => setToastRegistered(false)} show={toastRegistered} delay={5000} autohide>\n                    <Toast.Header>\n                        <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                        <strong className=\"me-auto\">Account Registered</strong>\n                    </Toast.Header>\n                    <Toast.Body>Now you can login with your email and password.</Toast.Body>\n                </Toast>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <ToastContainer position=\"bottom-end\" className=\"p-3\">\n                {loginError ? loginErrorText : ''}\n                {justRegisteredText}\n            </ToastContainer>\n\n            <Form onSubmit={submit}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Login to PLANSE</h1>\n\n                <p className=\"text-center\">\n                    <Link to=\"/register\">Register instead</Link>\n                </p>\n\n                <Form.Floating controlId=\"formEmail\">\n                    <Form.Control type=\"email\" className=\"top\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} required />\n                    <Form.Label>Email</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formPassword\">\n                    <Form.Control type=\"password\" className=\"bottom\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} required />\n                    <Form.Label>Password</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Log in <BoxArrowInRight /></Button>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Button, Form, Toast, ToastContainer } from 'react-bootstrap';\nimport { BoxArrowRight } from 'react-bootstrap-icons';\nimport { Redirect, Link } from 'react-router-dom';\n\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [registerRedirect, setRegisterRedirect] = useState(false);\n    const [registerError, setRegisterError] = useState('');\n    const [toast, setToast] = useState(false);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        setRegisterError('');\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/register', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name,\n                email,\n                password\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setRegisterRedirect(true);\n                setRegisterError('');\n                setToast(false);\n                // props.setUser(response);\n            })\n            .catch(error => {\n                setRegisterError(error.toString());\n                setToast(true);\n            });\n    }\n\n    if (registerRedirect) {\n        return (\n            <Redirect to={{ pathname: '/login', state: { justRegistered: 'true' } }}\n            />\n        );\n    }\n\n    let registerErrorText = (\n        <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Register Error</strong>\n                </Toast.Header>\n                <Toast.Body>{registerError}</Toast.Body>\n            </Toast>\n    );\n    if (registerError === 'Error: Error 409: Conflict' || registerError === 'Error: Error 409: ') {\n        registerErrorText = (\n            <Toast onClose={() => setToast(false)} show={toast} delay={5000} autohide>\n                <Toast.Header>\n                    <img src=\"logo-20x20.png\" className=\"rounded me-2\" alt=\"PLANSE\" />\n                    <strong className=\"me-auto\">Register Error</strong>\n                </Toast.Header>\n                <Toast.Body>This email is already registered.</Toast.Body>\n            </Toast>\n        );\n    }\n\n    return (\n        <div>\n            <ToastContainer position=\"bottom-end\" className=\"p-3\">\n                {registerError ? registerErrorText : ''}\n            </ToastContainer>\n\n            <Form className=\"register\" onSubmit={submit}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Register on PLANSE</h1>\n\n                <p className=\"text-center\">\n                    <Link to=\"/login\">Login instead</Link>\n                </p>\n\n                <Form.Floating controlId=\"formName\">\n                    <Form.Control type=\"text\" className=\"top\" placeholder=\"Ed Baldwin\" onChange={e => setName(e.target.value)} required />\n                    <Form.Label>Name</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formEmail\">\n                    <Form.Control type=\"email\" className=\"middle\" placeholder=\"name@example.com\" onChange={e => setEmail(e.target.value)} required />\n                    <Form.Label>Email address</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formPassword\">\n                    <Form.Control type=\"password\" className=\"bottom\" placeholder=\"password\" onChange={e => setPassword(e.target.value)} required />\n                    <Form.Label>Password</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Register <BoxArrowRight /></Button>\n\n                <p className=\"mt-3 mb-3 text-muted text-center\">You will be redirected to the login page.<br />Email verification doesn't needed.<br />We'll never share your email with anyone else</p>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { BoxArrowRight } from 'react-bootstrap-icons';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Logout = (props) => {\n    const [logoutRedirect, setLogoutRedirect] = useState(false);\n\n    const submit = async (e) => {\n        e.preventDefault();\n\n        await fetch(process.env.REACT_APP_DOMAIN + '/api/logout', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({})\n        });\n\n        setLogoutRedirect(true);\n        props.setUser([]);\n    }\n\n    if (logoutRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Form onSubmit={submit}>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">{props.user.name}, do you really want to log out?</h1>\n\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100\">Log out <BoxArrowRight /></Button>\n\n            <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n        </Form>\n    );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { CheckSquareFill, Gear, Star } from 'react-bootstrap-icons';\n\nimport { Link } from 'react-router-dom';\n\nexport const CalendarEntry = (props) => {\n    let mainCalendarText = (\n        <span></span>\n    );\n\n    if (props.user.main_calendar === props.calendar.id) {\n        mainCalendarText = (\n            <span className=\"text-secondary\" title=\"This is your main calendar\">\n                <Star />\n            </span>\n        );\n    }\n\n    return (\n        <div className=\"d-flex calendar-entry\">\n            <p className=\"mt-0 mb-0 flex-fill\">\n                <span className={\"calendar-color-\" + props.calendar.color} title=\"Show or hide this calendar\">\n                    <CheckSquareFill /> {props.calendar.name}\n                </span>\n            </p>\n\n            <p className=\"mt-0 mb-0\">\n                <span className=\"pr-3\">{mainCalendarText} </span>\n                <span>\n                    <Link to={\"/calendar/edit/\" + props.calendar.id} className=\"text-decoration-none text-secondary\" title=\"Edit this calendar\">\n                        <Gear />\n                    </Link>\n                </span>\n            </p>\n        </div>\n    );\n};\n\nexport default CalendarEntry;\n\n\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport { CalendarEntry } from './CalendarEntry';\n\nexport const CalendarList = (props) => {\n    if (props.userLoaded === false) {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n    else {\n        if (props.calendarsLoaded !== true) {\n            return (\n                <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n            );\n        }\n        else {\n            let calendarsList = props.calendars.map((calendar) => {\n                return <CalendarEntry key={calendar.id} calendar={calendar} user={props.user} />\n            })\n\n            return (\n                <div>\n                    {calendarsList}\n                </div>\n            );\n        }\n    }\n};\n\nexport default CalendarList;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\n\n\nexport const Welcome = () => {\n    return (\n        <div>\n            <Form>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Welcome to PLANSE</h1>\n\n                <p className=\"text-center\">Online calendar application.</p>\n\n                <Link to=\"/login\" className=\"w-100 btn btn-lg btn-primary\">Log in</Link>\n                <Link to=\"/register\" className=\"w-100 btn btn-lg btn-outline-primary mt-3\">Register</Link>\n\n                <p className=\"mt-5 mb-3 text-muted text-center\">&copy; PLANSE, 2021</p>\n            </Form>\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React, { useState } from 'react';\n\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nimport { CalendarList } from '../leftBar/CalendarList';\nimport { Welcome } from '../account/Welcome';\nimport { Calendar3, CalendarPlus, PlusCircleDotted } from 'react-bootstrap-icons';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const LeftBar = (props) => {\n    const [redirectToLogin] = useState(false);\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div className=\"left-bar\">\n                    <h5 className=\"calendar-entry\"><Calendar3 /> PLANSE Calendars</h5>\n\n                    <div className=\"d-flex calendar-entry\">\n                        <h6 className=\"text-muted flex-fill\">Your calendars</h6>\n\n                        <h6><Link to=\"calendar/create\" className=\"text-secondary\" title=\"Create calendar\"><CalendarPlus /></Link></h6>\n                    </div>\n                    \n\n                    <CalendarList user={props.user} userLoaded={props.userLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} />\n\n                    <p className=\"mt-4\">\n                        <Link to=\"/event/create\" className=\"btn btn-primary w-100\"><PlusCircleDotted /> Create event</Link>\n                    </p>\n                </div>\n            );\n        }\n    }\n};\n\nexport default LeftBar;\n","import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport moment from 'moment';\nimport { Button, ButtonGroup, Spinner } from 'react-bootstrap';\nimport { ChevronCompactRight, ChevronLeft, ChevronRight } from 'react-bootstrap-icons';\n\n\nexport const TopNav = (props) => {\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let todayButton = (<div></div>);\n        let currentDateClassName = \"currentDate d-flex\";\n        if (moment(props.viewDate).format('MM YYYY') !== moment().format('MM YYYY')) {\n            todayButton = (\n                <ButtonGroup size=\"sm\" aria-label=\"View\" className=\"goToToday\">\n                    <Button variant=\"outline-primary\" onClick={() => props.setViewDate(moment())}>Go to Today</Button>\n                </ButtonGroup>\n            );\n\n            currentDateClassName += \" notToday\";\n        }\n\n        const viewButtons = (\n            <div className=\"selectView d-flex\">\n                <ButtonGroup size=\"sm\" aria-label=\"View\" className=\"viewButtons\">\n                    <Button variant={props.view === 'week' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"week\")}>Week</Button>\n                    <Button variant={props.view === 'month' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"month\")}>Month</Button>\n                    <Button variant={props.view === 'year' ? 'primary' : 'outline-primary'} onClick={() => props.setView(\"year\")}>Year</Button>\n                </ButtonGroup>\n\n                {todayButton}\n            </div>\n        );\n\n        const username = (\n            <div className=\"account\">\n                <p className=\"text-end\">\n                    <Link to=\"/logout\" className=\"text-decoration-none\">{props.user.name} <ChevronCompactRight /></Link>\n                </p>\n            </div>\n        );\n\n        if (props.view === \"week\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n        else if (props.view === \"month\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        <div className=\"flex-fill\">\n                            <h3 className=\"text-center\">\n                                <span className=\"chevron\" onClick={() => props.setViewDate(moment(props.viewDate).subtract(1, \"months\"))}><ChevronLeft /></span>\n\n                                <span>{moment(props.viewDate).format('MMMM')} </span>\n                                <span className=\"fw-lighter\">{moment(props.viewDate).format('YYYY')}</span>\n\n                                <span className=\"chevron\" onClick={() => props.setViewDate(moment(props.viewDate).add(1, \"months\"))}><ChevronRight /></span>\n                            </h3>\n                        </div>\n\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n        else if (props.view === \"year\") {\n            return (\n                <div className=\"top-nav\">\n                    {viewButtons}\n\n                    <div className={currentDateClassName}>\n                        {username}\n                    </div>\n                </div>\n            );\n        }\n    }\n};\n\nexport default TopNav;\n","import React from 'react';\n\nimport moment from 'moment';\nimport { ChevronCompactRight } from 'react-bootstrap-icons';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const Day = (props) => {\n    if (props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let dayDate = props.dayDate;\n\n        let cn = \"dayNum mt-0 mb-0\"\n        if (dayDate.format(\"MM\") !== props.viewDate.format(\"MM\")) {\n            cn = \"dayNum text-secondary\"\n        }\n\n        let events = []\n\n        props.events.forEach((event) => {\n            let color = event.color;\n            if (color === null) {\n                props.calendars.forEach((calendar) => {\n                    if (calendar.id === event.calendar_id) {\n                        color = calendar.color;\n                    }\n                });\n            }\n            if (event.all_day === 1 || moment(event.end).diff(moment(event.start), \"days\") > 0) {\n                color = \"calendar-color-\" + color + \" calendar-background-color-\" + color;\n            }\n            else {\n                color = \"calendar-color-\" + color;\n            }\n\n            if (dayDate.isBetween(moment(event.start), moment(event.end), 'days', '[]') === true) {\n                if (event.all_day === 1 || moment(event.end).diff(dayDate, \"days\") > 0) {\n                    let multipleDays = (\n                        <span title=\"This event does not end today\" className={\"arrangement-\" + event.id}><ChevronCompactRight className={\"arrangement-\" + event.id} /></span>\n                    );\n                    if (moment(event.end).diff(dayDate, \"days\") === 0) {\n                        multipleDays = (\n                            <span className={\"arrangement-\" + event.id}></span>\n                        );\n                    }\n\n                    events.push(\n                        <div className={\"arrangement arrangement-allDay \" + color + \" arrangement-\" + event.id} key={event.id} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <p className={\"name arrangement-\" + event.id}>{event.name}</p>\n                            <p className={\"info arrangement-\" + event.id}>{multipleDays}</p>\n                        </div>\n                    );\n                }\n                else {\n                    events.push(\n                        <div className={\"arrangement arrangement-timeSpecific \" + color + \" arrangement-\" + event.id} key={event.id} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <p className={\"name arrangement-\" + event.id}>{event.name}</p>\n                            <p className={\"info arrangement-\" + event.id}>{moment(event.end).format(\"H:mm\")}</p>\n                        </div>\n                    );\n                }\n            }\n        });\n\n        return (\n            <div>\n                <p className={cn + \" \" + props.today + \" day-\" + dayDate.format(\"DD-MM-YYYY\")}>{dayDate.format('D')} {props.today === \"\" ? \"\" : \" — Today\"}</p>\n\n                <div>\n                    {events}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Day;\n","import React from 'react';\n\nimport moment from 'moment';\nimport { Spinner } from 'react-bootstrap';\nimport { Day } from '../month/Day';\n\n\nexport const Week = (props) => {\n    if (props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        return (\n            <>\n                {props.week.map((day) => {\n                    const week = parseInt(props.index, 10);\n                    const firstDay = props.firstDay;\n                    const firstDayDate = parseInt(props.firstDayDate, 10);\n\n                    let dayDate = moment(firstDay).add(day - firstDayDate + week * 7, \"days\");\n\n                    let today = \"\";\n                    if (dayDate.format(\"DD MM YYYY\") === moment().format(\"DD MM YYYY\")) {\n                        today = \"today\"\n                    }\n\n                    return (\n                        <div className={\"day day-\" + dayDate.format(\"DD-MM-YYYY\") + \" \" + today} key={day} onClick={(e) => { props.setShowEventModal(e) }}>\n                            <Day day={day} key={day} dayDate={dayDate} today={today} viewDate={props.viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} eventsLoaded={props.eventsLoaded} events={props.events} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n                        </div>\n                    )\n                })}\n            </>\n        );\n    }\n};\n\nexport default Week;\n","import React from 'react';\n\nimport moment from 'moment';\n\nimport { Week } from '../month/Week';\nimport { Spinner } from 'react-bootstrap';\n\n\nexport const MonthView = (props) => {\n    if (props.userLoaded === false || props.userLoaded === false || props.calendarsLoaded === false || props.eventsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const firstDay = moment(\"01 \" + moment(props.viewDate).format('MM') + moment(props.viewDate).format('YYYY'), \"DD MM YYYY\");\n        let firstDayDate = moment(firstDay).format('d') - 1;\n\n        if (firstDayDate === -1) {\n            firstDayDate = 6;\n        }\n\n        let weeks = [\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6'],\n            ['0', '1', '2', '3', '4', '5', '6']\n        ];\n\n        let weeksJS = weeks.map((week, index) => {\n            return (\n                <div className=\"week d-flex\" key={index} style={{zIndex: index}}>\n                    <Week className=\"week d-flex\" week={week} index={index} key={index} firstDay={firstDay} firstDayDate={firstDayDate} viewDate={props.viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} eventsLoaded={props.eventsLoaded} events={props.events} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"month\">\n                <div className=\"daysOfWeek d-flex\">\n                    <div className=\"day\">\n                        <p>Mon</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Tue</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Wed</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Thu</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Fri</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Sat</p>\n                    </div>\n\n                    <div className=\"day\">\n                        <p>Sun</p>\n                    </div>\n                </div>\n\n                {weeksJS}\n            </div>\n        );\n    }\n};\n\nexport default MonthView;\n","import React, { useEffect, useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nimport { MonthView } from '../calendar/month/MonthView';\n\n\nexport const CalendarBody = (props) => {\n    const [events, setEvents] = useState([]);\n    const [eventsLoaded, setEventsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        setEventsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/user/arrangements', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setEvents(response);\n                setEventsLoaded(true);\n            })\n            .catch(error => {\n                // alert(error);\n            });\n    }\n\n    if (props.userLoaded === false || props.calendarsLoaded !== true) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        if (props.view === 'week') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n        else if (props.view === 'month') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n        else if (props.view === 'year') {\n            return (\n                <MonthView viewDate={props.viewDate} events={events} eventsLoaded={eventsLoaded} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={props.showEventModal} setShowEventModal={props.setShowEventModal} />\n            );\n        }\n    }\n};\n\nexport default CalendarBody;\n","import React, { useState } from 'react';\n\nimport { Redirect } from \"react-router-dom\";\n\nimport moment from 'moment';\n\nimport { TopNav } from '../calendar/TopNav';\nimport { CalendarBody } from '../calendar/CalendarBody';\nimport { Welcome } from '../account/Welcome';\nimport { Modal, Spinner } from 'react-bootstrap';\n\n\nexport const Calendar = (props) => {\n    const [redirectToLogin] = useState(false);\n    const [view, setView] = useState('month');\n    const [viewDate, setViewDate] = useState(moment());\n    const [showEventModal, setShowEventModal] = useState(false);\n\n    let modalContent = (\n        <div></div>\n    );\n\n    if (showEventModal.target) {\n        let event = showEventModal.target.classList.value;\n        if (event.indexOf('day-') > 0) {\n            let day = event.split('day-')[1].split(' ')[0];\n            console.log(day);\n\n            modalContent = (\n                <Modal show={true} onHide={() => setShowEventModal(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Create event</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body></Modal.Body>\n                </Modal>\n            );\n        }\n        else if (event.indexOf('arrangement-') > 0) {\n            let arrangement = event.split('arrangement-')[1].split(' ')[0];\n            console.log(arrangement)\n        }\n    }\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div className=\"calendar\">\n                    {modalContent}\n\n                    <TopNav user={props.user} userLoaded={props.userLoaded} view={view} setView={setView} viewDate={viewDate} setViewDate={setViewDate} />\n\n                    <CalendarBody user={props.user} userLoaded={props.userLoaded} view={view} viewDate={viewDate} calendars={props.calendars} calendarsLoaded={props.calendarsLoaded} showEventModal={showEventModal} setShowEventModal={setShowEventModal} />\n                </div>\n            );\n        }\n    }\n};\n\nexport default Calendar;\n","import React, { useEffect, useState } from 'react';\n\nimport { Redirect } from \"react-router-dom\";\n\nimport { LeftBar } from './leftBar/LeftBar';\nimport { Calendar } from './calendar/Calendar';\nimport { Welcome } from './account/Welcome';\nimport { Spinner } from 'react-bootstrap';\n\n\nconst CalendarMain = (props) => {\n    const [redirectToLogin] = useState(false);\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                // alert(error);\n            });\n    }\n\n    if (redirectToLogin) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    if (props.userLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        if (props.user.length === 0) {\n            return (\n                <Welcome />\n            );\n        }\n        else {\n            return (\n                <div>\n                    <LeftBar user={props.user} setUser={props.setUser} calendars={calendars} calendarsLoaded={calendarsLoaded} />\n\n                    <Calendar user={props.user} setUser={props.setUser} calendars={calendars} calendarsLoaded={calendarsLoaded} />\n                </div>\n            );\n        }\n    }\n};\n\nexport default CalendarMain;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { CalendarPlus } from 'react-bootstrap-icons';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarCreate = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState(0);\n\n    const [createCalendarCreateRedirect, setCalendarCreateRedirect] = useState(false);\n\n    const createCalendar = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/create', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarCreateRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (createCalendarCreateRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Form onSubmit={createCalendar}>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">Create calendar</h1>\n\n            <Form.Floating controlId=\"formName\" className=\"mt-3\">\n                <Form.Control type=\"text\" className=\"top\" placeholder=\"Home\" onChange={e => setName(e.target.value)} required />\n                <Form.Label>Name *</Form.Label>\n            </Form.Floating>\n\n            <Form.Floating controlId=\"formDescription\">\n                <Form.Control type=\"text\" className=\"middle\" placeholder=\"Calendar for home events\" onChange={e => setDescription(e.target.value)} />\n                <Form.Label>Description</Form.Label>\n            </Form.Floating>\n\n            <Form.Floating controlId=\"formColor\">\n                <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue=\"0\" >\n                    <option value=\"0\">Red</option>\n                    <option value=\"1\">Orange</option>\n                    <option value=\"2\">Yellow</option>\n                    <option value=\"3\">Green</option>\n                    <option value=\"4\">Blue</option>\n                    <option value=\"5\">Purple</option>\n                </Form.Select>\n                <Form.Label>Color *</Form.Label>\n            </Form.Floating>\n\n            <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100 mt-3\">Create calendar <CalendarPlus /></Button>\n        </Form>\n    );\n};\n\nexport default CalendarCreate;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Spinner } from 'react-bootstrap';\nimport { Save } from 'react-bootstrap-icons';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CalendarEdit = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState();\n\n    const [calendarEditRedirect, setCalendarEditRedirect] = useState(false);\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarEdit = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/update/' + props.match.params.id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarEditRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarEditRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === parseInt(props.match.params.id, 10))[0];\n\n        let calendarControl = (\n            <div className=\"mt-3\">\n                <Link to={{ pathname: \"/calendar/updateMain/\" + props.match.params.id, state: { mainName: calendarInfo.name } }} className=\"w-100 btn btn-lg btn-warning\">Make the main calendar</Link>\n\n                <Button variant=\"danger\" size=\"lg\" className=\"w-100 mt-3\" onClick={() => history.push(\"/calendar/delete/\" + props.match.params.id)}>Delete calendar</Button>\n            </div>\n        );\n        if (calendarInfo.id === props.user.main_calendar) {\n            calendarControl = (\n                <div className=\"mt-3\">\n                    <p className=\"text-center\">You can't delete your main calendar</p>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <Form onSubmit={calendarEdit}>\n                    <p className=\"text-center\">\n                        <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                    </p>\n\n                    <h1 className=\"h3 mb-3 fw-normal text-center\">Edit <code>{calendarInfo.name}</code> calendar</h1>\n\n                    <Form.Floating controlId=\"formName\">\n                        <Form.Control type=\"text\" className=\"top\" placeholder=\"Home\" onChange={e => setName(e.target.value)} defaultValue={calendarInfo.name} required />\n                        <Form.Label>Name *</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formDescription\">\n                        <Form.Control type=\"text\" className=\"middle\" placeholder=\"Calendar for home events\" defaultValue={calendarInfo.description} onChange={e => setDescription(e.target.value)} />\n                        <Form.Label>Description</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formColor\">\n                        <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue={calendarInfo.color} >\n                            <option value=\"0\">Red</option>\n                            <option value=\"1\">Orange</option>\n                            <option value=\"2\">Yellow</option>\n                            <option value=\"3\">Green</option>\n                            <option value=\"4\">Blue</option>\n                            <option value=\"5\">Purple</option>\n                        </Form.Select>\n                        <Form.Label>Color *</Form.Label>\n                    </Form.Floating>\n\n                    <Button variant=\"primary\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Save changes <Save /></Button>\n                    \n                    <hr className=\"mt-3\" />\n                    {calendarControl}\n                </Form>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(CalendarEdit);\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form, Spinner } from 'react-bootstrap';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarEdit = (props) => {\n    const [calendarUpdateMainRedirect, setCalendarUpdateMainRedirect] = useState(false);\n    const [id] = useState(parseInt(props.match.params.id, 10))\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarUpdateMain = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/updateMain/' + id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarUpdateMainRedirect(true);\n                props.setUser(response);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarUpdateMainRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === id)[0];\n\n        return (\n            <Form onSubmit={calendarUpdateMain}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Update main calendar</h1>\n\n                <p className=\"text-center\">You are going to change your main calendar to the <code>{calendarInfo.name}</code> calendar.</p>\n\n                <Button variant=\"primary\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Update main calendar</Button>\n            </Form>\n        );\n    }\n};\n\nexport default withRouter(CalendarEdit);\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Form, Spinner } from 'react-bootstrap';\nimport { CalendarX } from 'react-bootstrap-icons';\n\nimport { withRouter } from 'react-router';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CalendarDelete = (props) => {\n    const [calendarDeleteRedirect, setCalendarDeleteRedirect] = useState(false);\n    const [id] = useState(parseInt(props.match.params.id, 10))\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const calendarDelete = (e) => {\n        e.preventDefault();\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/delete/' + id, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendarDeleteRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarDeleteRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n                setCalendarsLoaded(false);\n            });\n    }\n\n    if (calendarsLoaded !== true) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        const calendarInfo = calendars.filter((calendar) => parseInt(calendar.id, 10) === id)[0];\n\n        let deleteButton = (\n            <div>\n                <Alert key={calendarInfo.id} variant=\"danger\" className=\"text-center mt-3\">This action is irreversible</Alert>\n                <Button variant=\"danger\" size=\"lg\" className=\"w-100 mt-3\" type=\"submit\">Delete calendar <CalendarX /></Button>\n            </div>\n        );\n\n        if (props.user.main_calendar === calendarInfo.id) {\n            deleteButton = (\n                <Alert key={calendarInfo.id} variant=\"warning\" className=\"text-center\">You can't delete your main calendar</Alert>\n            );\n        }\n\n        return (\n            <Form onSubmit={calendarDelete}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Delete <code>{calendarInfo.name}</code> calendar</h1>\n\n                <p className=\"text-center\">You are going to delete this calendar.<br />All events in this calendar, as well as access settings will be deleted</p>\n\n                {deleteButton}\n            </Form>\n        );\n    }\n};\n\nexport default withRouter(CalendarDelete);\n","import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Bell, CalendarEvent, Sticky } from 'react-bootstrap-icons';\n\nimport { Link } from 'react-router-dom';\n\n\nconst EventCreate = (props) => {\n    return (\n        <Form>\n            <p className=\"text-center\">\n                <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n            </p>\n\n            <h1 className=\"h3 mb-3 fw-normal text-center\">Create event</h1>\n\n            <Link to=\"/arrangement/create\" className=\"w-100 btn btn-lg btn-primary mt-3\"><CalendarEvent /> Arrangement</Link>\n            <Button variant=\"outline-primary\" size=\"lg\" className=\"w-100 mt-3\" disabled><Bell /> Reminder</Button>\n            <Button variant=\"outline-primary\" size=\"lg\" className=\"w-100 mt-3\" disabled><Sticky /> Task</Button>\n        </Form>\n    );\n};\n\nexport default EventCreate;\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Form, Spinner } from 'react-bootstrap';\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\n\nimport { Redirect } from \"react-router-dom\";\n\n\nconst ArrangementCreate = (props) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const [startDate, setStartDate] = useState(moment().add(1, \"hours\").format(\"YYYY-MM-DD\"));\n    const [endDate, setEndDate] = useState(moment().add(2, \"hours\").format(\"YYYY-MM-DD\"));\n    const [allDay, setAllDay] = useState(true);\n    const [startTime, setStartTime] = useState(moment().add(1, \"hours\").format(\"HH\") + \":00\");\n    const [endTime, setEndTime] = useState(moment().add(2, \"hours\").format(\"HH\") + \":00\");\n\n    const [calendar, setCalendar] = useState(props.user.main_calendar);\n    const [color, setColor] = useState('');\n\n    const [arrangementCreateRedirect, setArrangementCreateRedirect] = useState(false);\n\n    const [calendars, setCalendars] = useState('');\n    const [calendarsLoaded, setCalendarsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const arrangementCreate = (e) => {\n        e.preventDefault();\n\n        const all_day = allDay;\n        const calendar_id = calendar;\n\n        let start = startDate + \" \" + startTime + \":00\";\n        let end = endDate + \" \" + endTime + \":00\";\n\n        if (all_day === true) {\n            start = startDate + \" 00:00:00\";\n            end = endDate + \" 00:00:00\";\n\n            if (moment(endDate).isBefore(moment(startDate))) {\n                alert(\"Start date should be before end date.\");\n                return;\n            }\n        }\n        else {\n            if (moment(endDate + \" \" + endTime).isBefore(moment(startDate + \" \" + startTime))) {\n                alert(\"Start date should be before end date.\");\n                return;\n            }\n        }\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/arrangement/create', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify({\n                name,\n                description,\n                start,\n                end,\n                all_day,\n                calendar_id,\n                color\n            })\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setArrangementCreateRedirect(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (arrangementCreateRedirect) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const fetchData = () => {\n        setCalendarsLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/calendar/index', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setCalendars(response);\n                setCalendarsLoaded(true);\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    if (calendarsLoaded === false) {\n        return (\n            <div className=\"text-center mt-5\">\n                <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </div>\n        );\n    }\n    else {\n        let calendarsList = calendars.map((calendar) => {\n            return (\n                <option value={calendar.id} key={calendar.id}>{calendar.name} {calendar.id === props.user.main_calendar ? '(Main)' : ''}</option>\n            );\n        })\n\n        let selectAllDay = (\n            <Form.Floating controlId=\"formAllDay\" className=\"mt-3\">\n                <ButtonGroup aria-label=\"All Day\" className=\"d-flex\">\n                    <Button variant=\"primary\" className=\"w-100 active\" onClick={() => setAllDay(true)}>All day</Button>\n                    <Button variant=\"primary\" className=\"w-100\" onClick={() => setAllDay(false)}>Selected time</Button>\n                </ButtonGroup>\n            </Form.Floating>\n        );\n\n        if (allDay === false) {\n            selectAllDay = (\n                <div>\n                    <Form.Floating controlId=\"formAllDay\" className=\"mt-3\">\n                        <ButtonGroup aria-label=\"All Day\" className=\"d-flex\">\n                            <Button variant=\"primary\" className=\"w-100\" onClick={() => setAllDay(true)}>All day</Button>\n                            <Button variant=\"primary\" className=\"w-100 active\" onClick={() => setAllDay(false)}>Selected time</Button>\n                        </ButtonGroup>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formStartTime\" className=\"mt-3\">\n                        <Form.Control type=\"time\" className=\"top\" placeholder=\"Start Time *\" onChange={e => setStartTime(e.target.value)} defaultValue={startTime} required />\n                        <Form.Label>Start Time *</Form.Label>\n                    </Form.Floating>\n\n                    <Form.Floating controlId=\"formEndTime\">\n                        <Form.Control type=\"time\" className=\"bottom\" placeholder=\"End Time *\" onChange={e => setEndTime(e.target.value)} defaultValue={endTime} required />\n                        <Form.Label>End Time *</Form.Label>\n                    </Form.Floating>\n                </div>\n            );\n        }\n\n        return (\n            <Form onSubmit={arrangementCreate}>\n                <p className=\"text-center\">\n                    <img className=\"mb-4\" src=\"/logo.png\" alt=\"PLANSE\" />\n                </p>\n\n                <h1 className=\"h3 mb-3 fw-normal text-center\">Create arrangement</h1>\n\n                <Form.Floating controlId=\"formName\">\n                    <Form.Control type=\"text\" className=\"top\" placeholder=\"Name\" onChange={e => setName(e.target.value)} required />\n                    <Form.Label>Name *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formDescription\">\n                    <Form.Control type=\"text\" className=\"bottom\" placeholder=\"Description\" onChange={e => setDescription(e.target.value)} />\n                    <Form.Label>Description</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formStartDate\" className=\"mt-3\">\n                    <Form.Control type=\"date\" className=\"top\" placeholder=\"Start Date *\" onChange={e => setStartDate(e.target.value)} defaultValue={startDate} required />\n                    <Form.Label>Start Date *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formEndDate\">\n                    <Form.Control type=\"date\" className=\"bottom\" placeholder=\"End Date *\" onChange={e => setEndDate(e.target.value)} defaultValue={endDate} required />\n                    <Form.Label>End Date *</Form.Label>\n                </Form.Floating>\n\n                {selectAllDay}\n\n                <Form.Floating controlId=\"formCalendar\" className=\"mt-3\">\n                    <Form.Select className=\"top\" aria-label=\"Calendar *\" onChange={e => setCalendar(e.target.value)} defaultValue={props.user.main_calendar} >\n                        {calendarsList}\n                    </Form.Select>\n                    <Form.Label>Calendar *</Form.Label>\n                </Form.Floating>\n\n                <Form.Floating controlId=\"formColor\">\n                    <Form.Select className=\"bottom\" aria-label=\"Color *\" onChange={e => setColor(e.target.value)} defaultValue=\"\" >\n                        <option value=\"\">Color of calendar</option>\n                        <option value=\"0\">Red</option>\n                        <option value=\"1\">Orange</option>\n                        <option value=\"2\">Yellow</option>\n                        <option value=\"3\">Green</option>\n                        <option value=\"4\">Blue</option>\n                        <option value=\"5\">Purple</option>\n                    </Form.Select>\n                    <Form.Label>Color *</Form.Label>\n                </Form.Floating>\n\n                <Button variant=\"primary\" type=\"submit\" size=\"lg\" className=\"w-100 mt-3\"><PlusCircleDotted /> Create arrangement</Button>\n            </Form>\n        );\n    }\n};\n\nexport default ArrangementCreate;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Login from './components/account/Login';\nimport Register from './components/account/Register';\nimport Logout from './components/account/Logout';\n\nimport CalendarMain from './components/CalendarMain';\nimport CalendarCreate from './components/calendars/CalendarCreate';\nimport CalendarEdit from './components/calendars/CalendarEdit';\nimport CalendarUpdateMain from './components/calendars/CalendarUpdateMain';\nimport CalendarDelete from './components/calendars/CalendarDelete';\n\nimport EventCreate from './components/arrangements/EventCreate';\nimport ArrangementCreate from './components/arrangements/ArrangementCreate';\n\n\nfunction App() {\n    const [user, setUser] = useState([]);\n    const [userLoaded, setUserLoaded] = useState(false);\n\n    useEffect(() => {\n        fetchUser();\n    }, []);\n\n    const fetchUser = () => {\n        setUserLoaded(false);\n\n        fetch(process.env.REACT_APP_DOMAIN + '/api/user', {\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        })\n            .then(\n                response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\n                        error.response = response;\n\n                        throw error;\n                    }\n                },\n                error => {\n                    throw error;\n                }\n            )\n            .then(response => response.json())\n            .then(response => {\n                setUser(response);\n                setUserLoaded(true);\n            })\n            .catch(error => {\n                setUserLoaded(true);\n            });\n    }\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Route path=\"/\" exact component={() => <CalendarMain user={user} userLoaded={userLoaded} />} />\n                <Route path=\"/login\" component={() => <Login setUser={setUser} />} />\n                <Route path=\"/register\" component={() => <Register setUser={setUser} />} />\n                <Route path=\"/logout\" component={() => <Logout user={user} setUser={setUser} />} />\n\n                <Route path=\"/calendar/create\" component={() => <CalendarCreate user={user} />} />\n                <Route path=\"/calendar/edit/:id\" component={() => <CalendarEdit user={user} />} />\n                <Route path=\"/calendar/updateMain/:id\" component={() => <CalendarUpdateMain user={user} setUser={setUser} />} />\n                <Route path=\"/calendar/delete/:id\" component={() => <CalendarDelete user={user} />} />\n\n                <Route path=\"/event/create\" component={() => <EventCreate user={user} />} />\n                <Route path=\"/arrangement/create\" component={() => <ArrangementCreate user={user} />} />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}